ID: aws_api_gateway_rest_api_public_endpoint_with_authorizer
Title: API Gateway REST API public endpoints should be configured with authorizer
Description: Ensure API Gateway REST API public endpoint is configured with authorizer. This rule is non-compliant if API Gateway REST API public endpoint has no authorizer configured.
Query:
  Engine: odysseus-v0.0.1
  QueryToExecute: |-
    ```sql
    select
      'arn:' || p.partition || ':apigateway:' || p.region || '::/apis/' || p.api_id as resource,
      p.kaytu_account_id as kaytu_account_id,
      p.kaytu_resource_id as kaytu_resource_id,
      case
        when not (endpoint_configuration_types ? 'PRIVATE') and (a.provider_arns is not null and jsonb_array_length(a.provider_arns) > 0 ) then 'ok'
        when not (endpoint_configuration_types ? 'PRIVATE') and ( a.provider_arns is null or jsonb_array_length(a.provider_arns) = 0 ) then 'alarm'
        else 'ok'
      end as status,
      case
        when not (endpoint_configuration_types ? 'PRIVATE') and (a.provider_arns is not null and jsonb_array_length(a.provider_arns) > 0 ) then p.name || ' has public endpoint with authorizer.'
        when not (endpoint_configuration_types ? 'PRIVATE') and ( a.provider_arns is null or jsonb_array_length(a.provider_arns) = 0 ) then p.name || ' has public endpoint without authorizer.'
        else p.name || ' has private endpoint.'
      end as reason
    from
      aws_api_gateway_rest_api as p
      left join aws_api_gateway_authorizer as a on p.api_id = a.rest_api_id;
    ```
  PrimaryTable: ""
  ListOfTables: []
  Parameters: []
Connector:
- aws
Tags: {}
Severity: low
