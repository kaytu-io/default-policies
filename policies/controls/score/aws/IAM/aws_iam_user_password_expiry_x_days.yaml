ID: aws_iam_user_password_expiry_x_days
Title: "IAM User Password Expiry X Days"
Description: "Ensure AWS Identity and Access Management (IAM) user passwords are reset before expiration (X Days)."
Query:
    Engine: odysseus-v0.0.1
    ListOfTables:
        - aws_iam_account_password_policy
        - aws_iam_credential_report
    Parameters:
        - Key: awsIamUserPasswordExpirationDays
          Required: true
    PrimaryTable: aws_iam_credential_report
    QueryToExecute: "select\n  r.user_name as resource,\n  r.kaytu_account_id,\n  r.kaytu_resource_id,\n  case\n    when not password_enabled then 'skip'\n    when password_last_changed is null then 'alarm'\n    when password_next_rotation is not null then 'ok'\n    when password_last_changed::timestamp + (COALESCE(p.max_password_age, '90') || ' days')::interval < now() - '{{.awsIamUserPasswordExpirationDays}} days'::interval then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when not password_enabled then 'password not enabled'\n    when password_last_changed is null then 'password last change not recognized'\n    when password_next_rotation is not null then 'password has password policy'\n    when password_last_changed::timestamp + (COALESCE(p.max_password_age, '90') || ' days')::interval < now() - '{{.awsIamUserPasswordExpirationDays}} days'::interval then 'password is about to expire'\n    else 'password has been reseted recently'\n  end as reason,\n  r.region, \n  r.account_id\nfrom\n  aws_iam_credential_report as r\n  left join aws_iam_account_password_policy as p on r.account_id = p.account_id\n"
Severity: high
Tags:
    score_service_name:
        - AWS Identity and Access Management (IAM)
    score_tags:
        - Problem Identities
Connector:
    - AWS
