ID: aws_attach_policy_to_iam_roles_associated_with_web_tier_ec2_instances
Title: Attach Policy to IAM Roles Associated with Web-Tier EC2 Instances
Description: Ensure IAM policy for EC2 IAM roles for web tier is configured.
Query:
  Engine: odysseus-v0.0.1
  QueryToExecute: |
    with iam_roles as (
      select
        r.arn as role_arn,
        i.arn as intance_arn
      from
        aws_iam_role as r,
        jsonb_array_elements_text(instance_profile_arns) as p
        left join aws_ec2_instance as i on p = i.iam_instance_profile_arn
      where
        i.arn is not null
    ),
    iam_role_without_permission as (
      select
        arn
      from
        aws_iam_role,
        jsonb_array_elements(assume_role_policy_std -> 'Statement') as s
      where
        arn in (
          select
            role_arn
          from
            iam_roles
        )
        and s is null
    )
    select
      i.arn as resource,
      kaytu_resource_id,
      kaytu_account_id,
      case
        when p.arn is null then 'ok'
        else 'alarm'
      end status,
      case
        when p.arn is null then title || ' has assumed roles.'
        else title || ' does not have any assume role.'
      end as reason,
      i.account_id
    from
      aws_ec2_instance as i
      left join iam_roles as r on r.intance_arn = i.arn
      left join iam_role_without_permission as p on p.arn = r.role_arn
    where
      tags::text like '%' || REPLACE(REPLACE((
          SELECT jsonb_object_agg(key, value)::text
          FROM jsonb_each_text('{{.awsWebTierTags}}'::jsonb)
        ), '{', ''), '}', '') || '%'
  Connector:
  - AWS
  PrimaryTable: aws_iam_role
  ListOfTables:
  - aws_ec2_instance
  - aws_iam_role
  Parameters:
  - Key: awsWebTierTags
    Required: true
  Global: false
ManualVerification: false
Severity: high
Tags:
  score_service_name:
  - AWS Identity and Access Management (IAM)
Managed: false
