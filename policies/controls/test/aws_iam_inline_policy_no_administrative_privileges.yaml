ID: aws_iam_inline_policy_no_administrative_privileges
Title: IAM inline policy should not have administrative privileges
Description: Ensure that no inline IAM policies exist that allow administrative privileges.
Query:
  Engine: odysseus-v0.0.1
  QueryToExecute: "    with full_administrative_privilege_policies as (\n      select\n
    \       arn,\n        inline_policies_std,\n        name,\n        account_id,\n
    \       region,\n        _ctx,\n        'iam_user' as type\n      from\n        aws_iam_user\n
    \     union\n      select\n        arn,\n        inline_policies_std,\n        name,\n
    \       account_id,\n        region,\n        _ctx,\n        'iam_role' as type\n
    \     from\n        aws_iam_role\n      union\n      select\n        arn,\n        inline_policies_std,\n
    \       name,\n        account_id,\n        region,\n        _ctx,\n        'iam_group'
    as type\n      from\n        aws_iam_group\n    ),\n    bad_policies as (\n      select\n
    \       arn,\n        count(*) as statements_num\n      from\n        full_administrative_privilege_policies,\n
    \       jsonb_array_elements(inline_policies_std) as policy_std,\n        jsonb_array_elements(policy_std
    -> 'PolicyDocument' -> 'Statement') as s,\n        jsonb_array_elements_text(s
    -> 'Resource') as resource,\n        jsonb_array_elements_text(s -> 'Action')
    as action\n      where\n        s ->> 'Effect' = 'Allow'\n        and resource
    = '*'\n        and (\n          (action = '*'\n          or action = '*:*'\n          )\n
    \       )\n      group by\n        arn\n    )\n    select\n      p.arn as resource,\n
    \     case\n        when bad.arn is null then 'ok'\n        else 'alarm'\n      end
    status,\n      p.name || ' contains ' || coalesce(bad.statements_num,0)  ||\n
    \       ' statements that allow action \"*\" on resource \"*\".' as reason\n      \n
    \   from\n      full_administrative_privilege_policies as p\n      left join bad_policies
    as bad on p.arn = bad.arn;\n"
  Connector:
  - aws
  PrimaryTable: ""
  ListOfTables: []
  Parameters: []
  Global: false
Tags: {}
Severity: ""
