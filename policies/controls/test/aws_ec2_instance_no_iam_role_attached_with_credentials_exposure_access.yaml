ID: aws_ec2_instance_no_iam_role_attached_with_credentials_exposure_access
Title: EC2 instance IAM role should not be attached with credentials exposure access
Description: This control ensures that EC2 instance IAM role should not be attached
  with credentials exposure access.
Query:
  Engine: odysseus-v0.0.1
  QueryToExecute: "    with iam_roles as (\n      select\n        r.arn as role_arn,\n
    \       i.arn as intance_arn\n      from\n        aws_iam_role as r,\n        jsonb_array_elements_text(instance_profile_arns)
    as p\n        left join aws_ec2_instance as i on p = i.iam_instance_profile_arn\n
    \     where\n        i.arn is not null\n    ), iam_role_with_permission as (\n
    \     select\n        arn\n      from\n        aws_iam_role,\n        jsonb_array_elements(assume_role_policy_std
    -> 'Statement') as s,\n        jsonb_array_elements_text(s -> 'Principal' -> 'Service')
    as service,\n        jsonb_array_elements_text(s -> 'Action') as action\n      where\n
    \       arn in (select role_arn from iam_roles)\n        and  s ->> 'Effect' =
    'Allow'\n        and service = 'ec2.amazonaws.com'\n        and action in (\n
    \         'chime:createapikey', 'codepipeline:pollforjobs', 'cognito-identity:getopenidtoken',
    'cognito-identity:getopenidtokenfordeveloperidentity', 'cognito-identity:getcredentialsforidentity',
    'connect:getfederationtoken', 'connect:getfederationtokens', 'ec2:getpassworddata',
    'ecr:getauthorizationtoken', 'gamelift:requestuploadcredentials', 'iam:createaccesskey',
    'iam:createloginprofile', 'iam:createservicespecificcredential', 'iam:resetservicespecificcredential',
    'iam:updateaccesskey', 'lightsail:getinstanceaccessdetails', 'lightsail:getrelationaldatabasemasteruserpassword',
    'rds-db:connect', 'redshift:getclustercredentials', 'sso:getrolecredentials',
    'mediapackage:rotatechannelcredentials', 'mediapackage:rotateingestendpointcredentials',
    'sts:assumerole', 'sts:assumerolewithsaml', 'sts:assumerolewithwebidentity', 'sts:getfederationtoken',
    'sts:getsessiontoken','*:*'\n        )\n    )\n    select\n      i.arn as resource,\n
    \     case\n        when p.arn is null then 'ok'\n        else 'alarm'\n      end
    status,\n      case\n        when p.arn is null then title || ' has no IAM role
    attached with credentials exposure permissions.'\n        else title || ' has
    IAM role attached with credentials exposure permissions.'\n      end as reason\n
    \     \n      \n    from\n      aws_ec2_instance as i\n      left join iam_roles
    as r on r.intance_arn = i.arn\n      left join iam_role_with_permission as p on
    p.arn = r.role_arn;\n"
  Connector:
  - aws
  PrimaryTable: ""
  ListOfTables: []
  Parameters: []
  Global: false
Tags: {}
Severity: ""
